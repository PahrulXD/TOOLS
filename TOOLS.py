# Obfuscated with PyObfuscate
# https://www.github.com/htr-tech
# Time : Thu Jan  4 09:04:06 2024
# -------------------------------
_ = lambda __ : __import__('base64').b64decode(__[::-1]);exec((_)(b'=='))